// Definizione dei colori per lo sfondo e le facce del cubo
$background: #C0D6DF;
$leftFace: #166088;
$rightFace: #4A6FA5;
$topFace: #4F6D7A;
// Scala del cubo
$scale: 1;
// Durata dell'animazione
$duration: 3s;
// Funzione di temporizzazione per l'animazione
$timingFunction: ease;

// Stile del body: centra il contenuto e imposta lo sfondo
body {
  display: flex;
  justify-content: center;
  align-items: center;
  height: 100vh;
  width: 100vw;
  margin: 0;
  padding: 0;
  background: $background;
}

// Contenitore del cubo: definisce le dimensioni e la scala
.container {
  position: relative;
  height: 100px;
  width: 86px;
  transform: scale(#{$scale * .5});
}

// Stile base del cubo
.cube {
  position: absolute;
  width: 86px;
  height: 100px;
}

// Faccia destra del cubo
.right {
  background: $rightFace;
  transform: rotate(-30deg) skewX(-30deg) translate(49px, 65px) scaleY(0.86);
}

// Faccia sinistra del cubo
.left {
  background: $leftFace;
  transform: rotate(90deg) skewX(-30deg) scaleY(0.86) translate(25px, -50px);
}

// Faccia superiore del cubo
.top {
  background: $topFace;
  transform: rotate(210deg) skew(-30deg) translate(-75px, -22px) scaleY(0.86);
  z-index: 2;
}

// Stile base per ogni "fetta" del cubo
.face {
  height: 50px;
  width: 50px;
  position: absolute;
  transform-origin: 0 0;
}

// Mixin per creare le classi e le animazioni per ogni "fetta" del cubo
@mixin slice($h, $w, $l) {
  // Definisce la classe per ogni fetta con la sua animazione
  .h#{$h}.w#{$w}.l#{$l} {
    z-index: (-#{$h});
    animation-name: h#{$h}w#{$w}l#{$l};
    animation-timing-function: $timingFunction;
    animation-duration: $duration;
    animation-iteration-count: infinite;
  }

  // Keyframes per l'animazione di ogni fetta
  @keyframes h#{$h}w#{$w}l#{$l} {
    // Definisce le posizioni della fetta in diversi momenti dell'animazione
    0% {
      transform: translate(($w * -50% - 50%) + ($l * 50% + 50%), ($h * 50 - 200%) + ($w * 25% - 25%) + ($l * 25 + 25%));
    }
    14% {
      transform: translate(($w * -50% - 50%) + ($l * 100% - 50%), ($h * 50 - 200%) + ($w * 25% - 25%) + ($l * 50 - 25%));
    }
    28% {
      transform: translate(($w * -100% + 50%) + ($l * 100% - 50%), ($h * 50 - 200%) + ($w * 50% - 75%) + ($l * 50 - 25%));
    }
    43% {
      transform: translate(($w * -100% - 100%) + ($l * 100% + 100%), ($h * 100 - 400%) + ($w * 50% - 50%) + ($l * 50 + 50%));
    }
    57% {
      transform: translate(($w * -100% - 100%) + ($l * 50% + 200%), ($h * 100 - 400%) + ($w * 50% - 50%) + ($l * 25 + 100%));
    }
    71% {
      transform: translate(($w * -50% - 200%) + ($l * 50% + 200%), ($h * 100 - 375%) + ($w * 25% - 25%) + ($l * 25 + 100%));
    }
    85% {
      transform: translate(($w * -50% - 50%) + ($l * 50% + 50%), ($h * 50 - 200%) + ($w * 25% - 25%) + ($l * 25 + 25%));
    }
    100% {
      transform: translate(($w * -50% - 50%) + ($l * 50% + 50%), ($h * 50 - 200%) + ($w * 25% - 25%) + ($l * 25 + 25%));
    }
  }
}

// Mixin per generare tutte le possibili combinazioni di fette del cubo
@mixin generateSlice() {
  // Tre cicli annidati per creare le 27 fette (3x3x3)
  @for $i from 1 to 4 {
    @for $j from 1 to 4 {
      @for $k from 1 to 4 {
        @include slice($i, $j, $k);
      }
    }
  }
}

// Esegue il mixin generateSlice per creare tutte le classi e le animazioni
@include generateSlice()